[unix_http_server]
file=/dev/shm/supervisor.sock
chmod=0700

[supervisord]
nodaemon=true

[rpcinterface:supervisor]
supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///dev/shm/supervisor.sock

[program:validator]
command=/usr/local/bin/validator --accept-terms-of-use --%(ENV_NETWORK)s --wallet-dir /rocketpool/data/validators/prysm-non-hd --wallet-password-file /rocketpool/data/validators/prysm-non-hd/direct/accounts/secret --beacon-rpc-provider "prysm-beacon-chain-%(ENV_NETWORK)s.avadopackage.com:4000" --graffiti "Avado-Rocket-Pool"

autostart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
killasgroup=true
stopasgroup=true

[program:rocketpool-node]
command=/bin/sh -c "rm -rf /.dockerenv && /usr/local/bin/rocketpoold --config /srv/rocketpool/config-%(ENV_NETWORK)s.yml --settings /srv/rocketpool/settings.yml node"
; We delete `/.dockerenv` before starting the Rocket Pool smartnode, otherwise it thinks it is managing docker containers itself. On Avado the smart node needs to assume it runs on a server instead.
; This is required for restarting the validator via the restart-validator script instead of trying to restart an non-existing docker container.
; (https://github.com/rocket-pool/smartnode/blob/5b12f73bbddb91ca47a8c84032a187dbefd7bc70/rocketpool/node/stake-prelaunch-minipools.go#L447)

autostart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
killasgroup=true
stopasgroup=true

[program:monitor]
directory=/usr/src/monitor
command=node server.js
autostart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
killasgroup=true
stopasgroup=true


[program:nginx]
command=nginx -c /etc/nginx/nginx.conf -g "daemon off;"
autostart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0